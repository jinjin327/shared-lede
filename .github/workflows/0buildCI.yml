
#
# Copyright (C) 2020 KFERMercer <KFER.Mercer@gmail.com>
# Copyright (c) 2022 hugcabbage <fengsongtianxia@gmail.com>
#
# This is free software, licensed under the MIT License.
#
#<https://github.com/hugcabbage/shared-lede>
#
# 源码采用******
#
name: 0模板机型******
on:
  workflow_dispatch:
    inputs:
      build:
        description: '若要编译固件，请输入true'
        required: true
        default: 'true'
      release_title:
        description: '输入release标题'     
        required: true
        default: '****** source for ****** device'
      version_description:
        description: '输入版本描述'     
        required: true
        default: '版本：******<br/>1.登陆IP ******，密码******<br/>2.升级内容：内核升级'
      release:
        description: '上传到release'
        required: false
        default: 'true'
        type: boolean
      artifact:
        description: '上传到artifact'
        required: false
        default: 'false'
        type: boolean
jobs:
  change-ver:
    name: 版本号变动
    runs-on: ubuntu-latest
    if: github.event.inputs.build == 'true'
    outputs:
      output-ver: ${{ steps.update-ver.outputs.new_ver }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: 升级版本号
        id: update-ver
        run: |
          ORIGINAL_VER=$(sed -n '/current version/p' version.txt | grep -E '[0-9]+.*' -o)
          NEW_VER=$(python3 update-version.py ${ORIGINAL_VER})
          sed -i "s/${ORIGINAL_VER}/${NEW_VER}/g" version.txt
          echo "::set-output name=new_ver::${NEW_VER}"
          echo "COMMIT_TIME=$(TZ='Asia/Shanghai' date +%Y年%-m月%-d日%H:%M)" >> $GITHUB_ENV
      - name: 推送
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 版本号更新 ${{ env.COMMIT_TIME }}
          commit_user_name: github-actions[bot]
          commit_user_email: 41898282+github-actions[bot]@users.noreply.github.com
          commit_author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
  build_openwrt:
    needs: change-ver
    name: 固件编译
    runs-on: ubuntu-latest
    if: github.event.inputs.build == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: 环境准备
        run: |
          #sudo rm -rf /usr/share/dotnet /etc/mysql /etc/apt/sources.list.d /usr/local/lib/android /opt/ghc
          #sudo -E apt-get -y purge ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 zip unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig libtinfo5
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
      - name: 下载源码与插件
        run: |
          chmod +x 0clone.sh
          ./0clone.sh
      - name: 升级feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: 修改配置
        run: |
          chmod +x 0modify.sh
          ./0modify.sh
      - name: 生成.config文件
        run: |
          mv -f ./0.config ./.config
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
      - name: Make download
        run: |
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h
      - name: 编译
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
      - name: 整理固件目录
        run: |
          mkdir -p ./collected_firmware/packages
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./collected_firmware
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./collected_firmware/packages
          cd collected_firmware
          zip -r ./allfiles.zip ./*
          cd packages
          zip -r ../packages.zip ./*
      - name: 上传固件到release
        id: upload-release
        if: github.event.inputs.release == 'true' && env.RELEASE_FIRMWARE_VALUE != ''
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.RELEASE_FIRMWARE }}
          file: collected_firmware/*
          tag: ${{ needs.change-ver.outputs.output-ver }}
          release_name: "${{ needs.change-ver.outputs.output-ver }} ${{ github.event.inputs.release_title }}" 
          overwrite: true
          prerelease: false
          body: "******机型******固件<br/>${{ github.event.inputs.version_description }}"
          file_glob: true
        env:
          RELEASE_FIRMWARE_VALUE: ${{ secrets.RELEASE_FIRMWARE }}
      - name: 上传固件到artifact
        if: github.event.inputs.artifact == 'true' || steps.upload-release.conclusion == 'skipped'
        uses: actions/upload-artifact@v3
        with:
          name: collected_firmware
          path: |
            collected_firmware/
            !collected_firmware/*.zip
